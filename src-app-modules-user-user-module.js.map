{"version":3,"sources":["webpack:///./src/app/modules/user/components/login/login.component.html","webpack:///./src/app/modules/user/components/login/login.component.scss","webpack:///./src/app/modules/user/components/login/login.component.ts","webpack:///./src/app/modules/user/components/login/login.config.ts","webpack:///./src/app/modules/user/components/user-profile/user-profile.component.html","webpack:///./src/app/modules/user/components/user-profile/user-profile.component.scss","webpack:///./src/app/modules/user/components/user-profile/user-profile.component.ts","webpack:///./src/app/modules/user/components/user-profile/user-profile.config.ts","webpack:///./src/app/modules/user/components/user-pwd/user-pwd.component.html","webpack:///./src/app/modules/user/components/user-pwd/user-pwd.component.scss","webpack:///./src/app/modules/user/components/user-pwd/user-pwd.component.ts","webpack:///./src/app/modules/user/components/user-pwd/user-pwd.config.ts","webpack:///./src/app/modules/user/guards/user.guard.ts","webpack:///./src/app/modules/user/services/login-data-provider.service.ts","webpack:///./src/app/modules/user/services/user-pwd-data-provider.service.ts","webpack:///./src/app/modules/user/types/changecredentials-do.class.ts","webpack:///./src/app/modules/user/types/login-result.enum.ts","webpack:///./src/app/modules/user/types/model/changecredentials-dto.class.ts","webpack:///./src/app/modules/user/user.module.ts","webpack:///./src/app/modules/user/user.routing.ts"],"names":[],"mappings":"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","file":"src-app-modules-user-user-module.js","sourcesContent":["module.exports = \"<bla-common-dialog [config]=\\\"config\\\">\\n\\n  <div id=\\\"login\\\">\\n    <div id=\\\"login-dialog\\\">\\n\\n      <bla-alert [visible]=\\\"(loginResult === LoginResult.SUCCESS)\\\"\\n                 header=\\\"{{ 'USER.LOGIN.NOTIFICATION.LOGIN_SUCCESSFUL.HEADER' | translate }}\\\"\\n                 [alertType]=\\\"AlertType.SUCCESS\\\">\\n        {{ 'USER.LOGIN.NOTIFICATION.LOGIN_SUCCESSFUL.TEXT' | translate }}\\n      </bla-alert>\\n\\n      <bla-alert [visible]=\\\"(loginResult === LoginResult.FAILURE)\\\"\\n                 header=\\\"{{ 'USER.LOGIN.NOTIFICATION.LOGIN_FAILURE.HEADER' | translate }}\\\"\\n                 [alertType]=\\\"AlertType.DANGER\\\">\\n        {{ 'USER.LOGIN.NOTIFICATION.LOGIN_FAILURE.TEXT' | translate }}\\n      </bla-alert>\\n\\n      <bla-alert [visible]=\\\"(loginResult === LoginResult.CONNECTION_PROBLEM)\\\"\\n                 header=\\\"{{ 'USER.LOGIN.NOTIFICATION.LOGIN_CONNECTION_PROBLEM.HEADER' | translate }}\\\"\\n                 [alertType]=\\\"AlertType.WARNING\\\">\\n        {{ 'USER.LOGIN.NOTIFICATION.LOGIN_CONNECTION_PROBLEM.TEXT' | translate }}\\n      </bla-alert>\\n\\n      <div class=\\\"card mb-4 shadow-sm\\\">\\n        <div class=\\\"card-body login-dialog\\\">\\n\\n          <form id=\\\"loginForm\\\"\\n                #loginForm=\\\"ngForm\\\">\\n\\n            <!-- Logo -->\\n            <div class=\\\"imgcontainer\\\">\\n              <img src=\\\"../assets/img/logo.png\\\"\\n                   alt=\\\"Logo\\\"\\n                   class=\\\"avatar\\\">\\n\\n              <h5 class=\\\"h3 mb-3 font-weight-normal\\\">{{ 'USER.LOGIN.HEADER' | translate }}</h5>\\n            </div>\\n\\n            <!-- Input -->\\n            <div class=\\\"container\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"loginEmail\\\">{{ 'USER.LOGIN.USERNAME.LABEL' | translate }}</label>\\n                <input type=\\\"email\\\"\\n                       class=\\\"form-control\\\"\\n                       name=\\\"loginEmail\\\"\\n                       id=\\\"loginEmail\\\"\\n                       #loginEmail=\\\"ngModel\\\"\\n                       [(ngModel)]=\\\"credentials.username\\\"\\n                       required\\n                       pattern=\\\"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,63}$\\\"\\n                       [class.is-invalid]=\\\"(loginEmail.invalid && !loginEmail.untouched) || (loginResult === LoginResult.FAILURE)\\\"\\n                       placeholder=\\\"{{ 'USER.LOGIN.USERNAME.LABEL' | translate }}\\\">\\n\\n                <div class=\\\"invalid-feedback\\\">\\n                  {{ 'USER.OGIN.USERNAME.ERROR' | translate }}\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"loginPassword\\\">{{ 'USER.LOGIN.PASSWORD.LABEL' | translate }}</label>\\n                <input type=\\\"password\\\"\\n                       class=\\\"form-control\\\"\\n                       id=\\\"loginPassword\\\"\\n                       name=\\\"loginPassword\\\"\\n                       #loginPassword=\\\"ngModel\\\"\\n                       [(ngModel)]=\\\"credentials.password\\\"\\n                       required\\n                       minlength=\\\"3\\\"\\n                       (keyup.enter)=\\\"onLogin($event)\\\"\\n                       [class.is-invalid]=\\\"(loginPassword.invalid && !loginPassword.untouched) || (loginResult === LoginResult.FAILURE)\\\"\\n                       placeholder=\\\"{{ 'USER.LOGIN.PASSWORD.PLACEHOLDER' | translate }}\\\">\\n\\n                <div class=\\\"invalid-feedback\\\">\\n                  {{ 'USER.LOGIN.PASSWORD.ERROR' | translate }}\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group form-check\\\">\\n                <input type=\\\"checkbox\\\"\\n                       class=\\\"form-check-input\\\"\\n                       id=\\\"loginRememberMe\\\"\\n                       name=\\\"loginRememberMe\\\"\\n                       [(ngModel)]=\\\"credentials.rememberMe\\\">\\n                <label class=\\\"form-check-label\\\"\\n                       for=\\\"loginRememberMe\\\">{{ 'USER.LOGIN.REMEMBER_ME.LABEL' | translate }}</label>\\n              </div>\\n\\n              <bla-button [id]=\\\"'loginButton'\\\"\\n                          [buttonSize]=\\\"ButtonSize.LARGE_BLOCK\\\"\\n                          [disabled]=\\\"!loginForm.valid\\\"\\n                          [loading]=\\\"loading\\\"\\n                          (onClick)=\\\"onLogin($event)\\\">{{ 'USER.LOGIN.BUTTON.LOGIN' | translate }}\\n              </bla-button>\\n\\n            </div>\\n          </form>\\n\\n        </div>\\n\\n      </div>\\n\\n      <!-- Shortcut Login only visible if not in prod mode -->\\n      <div *ngIf=\\\"!(inProd === true)\\\">\\n        <bla-alert header=\\\"Testbenutzer:\\\"\\n                   [alertType]=\\\"AlertType.INFO\\\">\\n          <p>Username: admin@bogenliga.de <br>Password: admin<br>Rolle: ADMIN<br>\\n            <bla-button [buttonSize]=\\\"ButtonSize.SMALL\\\"\\n                        [value]=\\\"testAdminUser\\\"\\n                        (onClick)=\\\"onAutoLogin($event)\\\">Login als Admin\\n            </bla-button>\\n          </p>\\n          <p>Username: moderator@bogenliga.de <br>Password: moderator<br>Rolle: MODERATOR<br>\\n            <bla-button [buttonSize]=\\\"ButtonSize.SMALL\\\"\\n                        [value]=\\\"testModeratorUser\\\"\\n                        (onClick)=\\\"onAutoLogin($event)\\\">Login als Moderator\\n            </bla-button>\\n          </p>\\n          <p>Username: user@bogenliga.de <br>Password: user <br>Rolle: USER<br>\\n            <bla-button [buttonSize]=\\\"ButtonSize.SMALL\\\"\\n                        [value]=\\\"testUserUser\\\"\\n                        (onClick)=\\\"onAutoLogin($event)\\\">Login als User\\n            </bla-button>\\n          </p>\\n          <p>Username: Malorie.Artman@bogenliga.de <br>Password: swt2 <br>Rolle: USER<br>\\n            <bla-button [buttonSize]=\\\"ButtonSize.SMALL\\\"\\n                        [value]=\\\"testDummyUserUser\\\"\\n                        (onClick)=\\\"onAutoLogin($event)\\\">Login als Test-Benutzer\\n            </bla-button>\\n          </p>\\n          <p>Username: Nicholas.Corle@bogenliga.de <br>Password: swt2 <br>Rolle: MODERATOR<br>\\n            <bla-button [buttonSize]=\\\"ButtonSize.SMALL\\\"\\n                        [value]=\\\"testDummyModeratorUser\\\"\\n                        (onClick)=\\\"onAutoLogin($event)\\\">Login als Test-Moderator\\n            </bla-button>\\n          </p>\\n        </bla-alert>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n</bla-common-dialog>\\n\"","module.exports = \"/* Farbkonzept Website */\\n#login {\\n  display: flex;\\n  justify-content: center; }\\n#login-dialog {\\n  width: 500px;\\n  max-width: 500px; }\\n/* Center the avatar image inside this container */\\n.imgcontainer {\\n  text-align: center;\\n  margin: 24px 0 12px 0; }\\n/* Avatar image */\\nimg.avatar {\\n  width: 40%;\\n  border-radius: 50%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyYXZpcy9idWlsZC9leHhjZWxsZW50L3N3dDItYnNhLWZyb250ZW5kL2JvZ2VubGlnYS9zcmMvYXBwL21vZHVsZXMvdXNlci9jb21wb25lbnRzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdCQUFBO0FBU0E7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCLEVBQUE7QUFHekI7RUFDRSxZQUFZO0VBQ1osZ0JBQWdCLEVBQUE7QUFHbEIsa0RBQUE7QUFDQTtFQUNFLGtCQUFrQjtFQUNsQixxQkFBcUIsRUFBQTtBQUd2QixpQkFBQTtBQUNBO0VBQ0UsVUFBVTtFQUNWLGtCQUFrQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy91c2VyL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBGYXJia29uemVwdCBXZWJzaXRlICovXG4kcHJpbWFyeTogIzAyYmRkNTsgLy8gTGlua3MsIE5hdmJhclxuJHByaW1hcnktbGlnaHQ6ICNiNGZmZmY7IC8vIFNpZGViYXItQmFja2dyb3VuZFxuJHByaW1hcnktZGFyazogIzAwN2M5MTsgLy8gU2lkZWJhci1Gb250XG4kc2Vjb25kYXJ5OiAjZmZjMTA3OyAvLyBob3ZlciBUYWJsZXNcbiRzZWNvbmRhcnktbGlnaHQ6ICNmZmYzNTA7XG4kc2Vjb25kYXJ5LWRhcms6ICNmZjgzM2E7IC8vIGhvdmVyIExpbmtzLCBMb2dvXG5cbi8vIExvZ2luIFN0bHllXG4jbG9naW4ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuI2xvZ2luLWRpYWxvZyB7XG4gIHdpZHRoOiA1MDBweDtcbiAgbWF4LXdpZHRoOiA1MDBweDtcbn1cblxuLyogQ2VudGVyIHRoZSBhdmF0YXIgaW1hZ2UgaW5zaWRlIHRoaXMgY29udGFpbmVyICovXG4uaW1nY29udGFpbmVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW46IDI0cHggMCAxMnB4IDA7XG59XG5cbi8qIEF2YXRhciBpbWFnZSAqL1xuaW1nLmF2YXRhciB7XG4gIHdpZHRoOiA0MCU7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbn1cblxuIl19 */\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {isNullOrUndefined, isUndefined} from '@shared/functions';\nimport {environment} from '../../../../../environments/environment';\nimport {AlertType} from '../../../shared/components/alerts';\nimport {ButtonSize} from '../../../shared/components/buttons';\nimport {LoginDataProviderService} from '../../services/login-data-provider.service';\nimport {CredentialsDO} from '../../types/credentials-do.class';\nimport {LoginResult} from '../../types/login-result.enum';\nimport {USER_LOGIN_CONFIG} from './login.config';\n\nconst LOGIN_REDIRECT_QUERY_PARAM = 'destination';\n\n@Component({\n  selector:    'bla-login',\n  templateUrl: './login.component.html',\n  styleUrls:   ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  public credentials = new CredentialsDO();\n  public loading = false;\n  public loginResult: LoginResult = LoginResult.PENDING;\n  public ButtonSize = ButtonSize;\n  public AlertType = AlertType;\n  public LoginResult = LoginResult;\n  public inProd = environment.production;\n\n  // TODO: remove after development\n  public testAdminUser: CredentialsDO = new CredentialsDO('admin@bogenliga.de', 'admin');\n  public testModeratorUser: CredentialsDO = new CredentialsDO('moderator@bogenliga.de', 'moderator');\n  public testUserUser: CredentialsDO = new CredentialsDO('user@bogenliga.de', 'user');\n  public testDummyModeratorUser: CredentialsDO = new CredentialsDO('Nicholas.Corle@bogenliga.de', 'swt2');\n  public testDummyUserUser: CredentialsDO = new CredentialsDO('Malorie.Artman@bogenliga.de', 'swt2');\n  // TODO: remove after development\n\n  public config = USER_LOGIN_CONFIG;\n  private destinationRouteAfterLogin = '/home';\n\n  constructor(private loginDataProviderService: LoginDataProviderService, private route: ActivatedRoute, private router: Router) {\n  }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe((params) => {\n      if (!isUndefined(params[LOGIN_REDIRECT_QUERY_PARAM])) {\n        this.destinationRouteAfterLogin = params[LOGIN_REDIRECT_QUERY_PARAM];\n      }\n    });\n\n    this.initRememberedUsername();\n  }\n\n  /**\n   * I send the login credentials to the backend sign in service.\n   *\n   * Show a success notification and redirect to the destination route from the url query parameter.\n   *\n   * On error, show an error notification.\n   *\n   * @param $event ignore\n   */\n  public onLogin($event: any): void {\n    this.loading = true;\n\n    this.loginDataProviderService.signIn(this.credentials)\n        .then(\n          () => this.handleSuccessfulLogin(),\n          (loginResult: LoginResult) => this.showFailedLogin(loginResult)\n        );\n  }\n\n  // TODO: remove after development\n  public onAutoLogin($event: CredentialsDO): void {\n    this.credentials = $event;\n    this.onLogin(null);\n  }\n\n  private initRememberedUsername() {\n    this.credentials.username = this.loginDataProviderService.getEmailAddress();\n\n    if (!isNullOrUndefined(this.credentials.username)) {\n      this.credentials.rememberMe = true;\n    }\n  }\n\n  private showFailedLogin(loginResult: LoginResult) {\n    this.loading = false;\n    this.loginResult = loginResult;\n  }\n\n  private handleSuccessfulLogin() {\n    this.loading = false;\n    this.loginResult = LoginResult.SUCCESS;\n    this.router.navigateByUrl(this.destinationRouteAfterLogin);\n  }\n}\n","import {CommonDialogConfig} from '../../../shared/components/dialogs';\n\nexport const USER_LOGIN_CONFIG: CommonDialogConfig = {\n  moduleTranslationKey:    'USER',\n  pageTitleTranslationKey: 'USER.LOGIN.TITLE'\n};\n","module.exports = \"<bla-common-dialog [config]=\\\"config\\\"\\n                   [loading]=\\\"loading\\\">\\n\\n  <form id=\\\"userProfileForm\\\"\\n        class=\\\"horizontal-form half-page\\\"\\n        #userProfileForm=\\\"ngForm\\\">\\n\\n    <!-- VORNAME -->\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"userProfileVorname\\\"\\n             class=\\\"col-sm-3 col-form-label\\\">\\n        <span>{{ 'USER.PROFILE.FORM.VORNAME.LABEL' | translate }}</span>\\n        <span> *</span>\\n      </label>\\n      <div class=\\\"col-sm-9\\\">\\n        <input type=\\\"text\\\"\\n               readonly\\n               class=\\\"form-control-plaintext\\\"\\n               id=\\\"userProfileVorname\\\"\\n               name=\\\"userProfileVorname\\\"\\n               #userProfileVorname=\\\"ngModel\\\"\\n               [(ngModel)]=\\\"currentUserProfile.vorname\\\"\\n               [class.is-invalid]=\\\"userProfileVorname.invalid && !userProfileVorname.untouched\\\"\\n               placeholder=\\\"{{ 'USER.PROFILE.FORM.VORNAME.PLACEHOLDER' | translate }}\\\">\\n\\n        <div class=\\\"invalid-feedback\\\">\\n          {{ 'USER.PROFILE.FORM.VORNAME.ERROR' | translate }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- NACHNAME -->\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"userProfileNachname\\\"\\n             class=\\\"col-sm-3 col-form-label\\\">\\n        <span>{{ 'USER.PROFILE.FORM.NACHNAME.LABEL' | translate }}</span>\\n        <span> *</span>\\n      </label>\\n      <div class=\\\"col-sm-9\\\">\\n        <input type=\\\"text\\\"\\n               readonly\\n               class=\\\"form-control-plaintext\\\"\\n               id=\\\"userProfileNachname\\\"\\n               name=\\\"userProfileNachname\\\"\\n               #userProfileNachname=\\\"ngModel\\\"\\n               [(ngModel)]=\\\"currentUserProfile.nachname\\\"\\n               [class.is-invalid]=\\\"userProfileNachname.invalid && !userProfileNachname.untouched\\\"\\n               placeholder=\\\"{{ 'USER.PROFILE.FORM.NACHNAME.PLACEHOLDER' | translate }}\\\">\\n\\n        <div class=\\\"invalid-feedback\\\">\\n          {{ 'USER.PROFILE.FORM.NACHNAME.ERROR' | translate }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- EMAIL -->\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"userProfileEmail\\\"\\n             class=\\\"col-sm-3 col-form-label\\\">\\n        <span>{{ 'USER.PROFILE.FORM.EMAIL.LABEL' | translate }}</span>\\n        <span> *</span>\\n      </label>\\n      <div class=\\\"col-sm-9\\\">\\n        <input type=\\\"text\\\"\\n               readonly\\n               class=\\\"form-control-plaintext\\\"\\n               id=\\\"userProfileEmail\\\"\\n               name=\\\"userProfileEmail\\\"\\n               #userProfileEmail=\\\"ngModel\\\"\\n               [(ngModel)]=\\\"currentUserProfile.email\\\"\\n               [class.is-invalid]=\\\"userProfileEmail.invalid && !userProfileEmail.untouched\\\"\\n               placeholder=\\\"{{ 'USER.PROFILE.FORM.EMAIL.PLACEHOLDER' | translate }}\\\">\\n\\n        <div class=\\\"invalid-feedback\\\">\\n          {{ 'USER.PROFILE.FORM.EMAIL.ERROR' | translate }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- GEBURTSDATUM -->\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"userProfileGeburtsdatum\\\"\\n             class=\\\"col-sm-3 col-form-label\\\">\\n        <span>{{ 'USER.PROFILE.FORM.GEBURTSDATUM.LABEL' | translate }}</span>\\n        <span> *</span>\\n      </label>\\n      <div class=\\\"col-sm-9\\\">\\n        <input type=\\\"text\\\"\\n               readonly\\n               class=\\\"form-control-plaintext\\\"\\n               pattern=\\\"[0-9]{4}-[0-9]{2}-[0-9]{2}\\\"\\n               id=\\\"userProfileGeburtsdatum\\\"\\n               name=\\\"userProfileGeburtsdatum\\\"\\n               #userProfileGeburtsdatum=\\\"ngModel\\\"\\n               [(ngModel)]=\\\"currentUserProfile.geburtsdatum\\\"\\n               [class.is-invalid]=\\\"userProfileGeburtsdatum.invalid && !userProfileGeburtsdatum.untouched\\\"\\n               placeholder=\\\"{{ 'USER.PROFILE.FORM.GEBURTSDATUM.PLACEHOLDER' | translate }}\\\">\\n\\n        <div class=\\\"invalid-feedback\\\">\\n          {{ 'USER.PROFILE.FORM.GEBURTSDATUM.ERROR' | translate }}\\n        </div>\\n      </div>\\n    </div>\\n\\n\\n    <!-- MITGLIEDSNUMMER -->\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"userProfileMitgliedsnummer\\\"\\n             class=\\\"col-sm-3 col-form-label\\\">\\n        <span>{{ 'USER.PROFILE.FORM.MITGLIEDSNUMMER.LABEL' | translate }}</span>\\n        <span> *</span>\\n      </label>\\n      <div class=\\\"col-sm-9\\\">\\n        <input type=\\\"text\\\"\\n               readonly\\n               class=\\\"form-control-plaintext\\\"\\n               id=\\\"userProfileMitgliedsnummer\\\"\\n               name=\\\"userProfileMitgliedsnummer\\\"\\n               #userProfileMitgliedsnummer=\\\"ngModel\\\"\\n               [(ngModel)]=\\\"currentUserProfile.mitgliedsnummer\\\"\\n               [class.is-invalid]=\\\"userProfileMitgliedsnummer.invalid && !userProfileMitgliedsnummer.untouched\\\"\\n               placeholder=\\\"{{ 'USER.PROFILE.FORM.MITGLIEDSNUMMER.PLACEHOLDER' | translate }}\\\">\\n\\n        <div class=\\\"invalid-feedback\\\">\\n          {{ 'USER.PROFILE.FORM.MITGLIEDSNUMMER.ERROR' | translate }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- NATIONALITAET -->\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"userProfileNationalitaet\\\"\\n             class=\\\"col-sm-3 col-form-label\\\">\\n        <span>{{ 'USER.PROFILE.FORM.NATIONALITAET.LABEL' | translate }}</span>\\n        <span> *</span>\\n      </label>\\n      <div class=\\\"col-sm-9\\\">\\n        <input type=\\\"text\\\"\\n               readonly\\n               class=\\\"form-control-plaintext\\\"\\n               pattern=\\\"[D|AT|CH|FR|IT|GB]\\\"\\n               id=\\\"userProfileNationalitaet\\\"\\n               name=\\\"userProfileNationalitaet\\\"\\n               #userProfileNationalitaet=\\\"ngModel\\\"\\n               [(ngModel)]=\\\"currentUserProfile.nationalitaet\\\"\\n               [class.is-invalid]=\\\"userProfileNationalitaet.invalid && !userProfileNationalitaet.untouched\\\"\\n               placeholder=\\\"{{ 'USER.PROFILE.FORM.NATIONALITAET.PLACEHOLDER' | translate }}\\\">\\n\\n        <div class=\\\"invalid-feedback\\\">\\n          {{ 'USER.PROFILE.FORM.NATIONALITAET.ERROR' | translate }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- TODO: VEREIN ID, use dropdown list -->\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"userProfileVerein\\\"\\n             class=\\\"col-sm-3 col-form-label\\\">\\n        <span>{{ 'USER.PROFILE.FORM.VEREIN.LABEL' | translate }}</span>\\n        <span> *</span>\\n      </label>\\n      <div class=\\\"col-sm-9\\\">\\n        <input type=\\\"text\\\"\\n               readonly\\n               class=\\\"form-control-plaintext\\\"\\n               id=\\\"userProfileVerein\\\"\\n               name=\\\"userProfileVerein\\\"\\n               #userProfileVerein=\\\"ngModel\\\"\\n               [(ngModel)]=\\\"currentUserProfile.vereinsId\\\"\\n               [class.is-invalid]=\\\"userProfileVerein.invalid && !userProfileVerein.untouched\\\"\\n               placeholder=\\\"{{ 'USER.PROFILE.FORM.VEREIN.PLACEHOLDER' | translate }}\\\">\\n\\n        <div class=\\\"invalid-feedback\\\">\\n          {{ 'USER.PROFILE.FORM.VEREIN.ERROR' | translate }}\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n\\n</bla-common-dialog>\\n\"","module.exports = \".half-page {\\n  width: 50%; }\\n\\n.button-box {\\n  display: flex;\\n  justify-content: space-between;\\n  flex-direction: row-reverse;\\n  flex-wrap: wrap; }\\n\\n@media (max-width: 1400px) {\\n  .half-page {\\n    width: 80%; } }\\n\\n@media (max-width: 950px) {\\n  .half-page {\\n    width: 100%; } }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyYXZpcy9idWlsZC9leHhjZWxsZW50L3N3dDItYnNhLWZyb250ZW5kL2JvZ2VubGlnYS9zcmMvYXBwL21vZHVsZXMvdXNlci9jb21wb25lbnRzL3VzZXItcHJvZmlsZS91c2VyLXByb2ZpbGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFVLEVBQUE7O0FBR1o7RUFDRSxhQUFhO0VBQ2IsOEJBQThCO0VBQzlCLDJCQUEyQjtFQUMzQixlQUFlLEVBQUE7O0FBSWpCO0VBRUU7SUFDRSxVQUFVLEVBQUEsRUFDWDs7QUFLSDtFQUVFO0lBQ0UsV0FBVyxFQUFBLEVBQ1oiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL3VzZXIvY29tcG9uZW50cy91c2VyLXByb2ZpbGUvdXNlci1wcm9maWxlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhhbGYtcGFnZSB7XG4gIHdpZHRoOiA1MCU7XG59XG5cbi5idXR0b24tYm94IHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBmbGV4LWRpcmVjdGlvbjogcm93LXJldmVyc2U7XG4gIGZsZXgtd3JhcDogd3JhcDtcbn1cblxuLy8gZm9yIHNtYWxsIGRldmljZXNcbkBtZWRpYSAobWF4LXdpZHRoOiAxNDAwcHgpIHtcblxuICAuaGFsZi1wYWdlIHtcbiAgICB3aWR0aDogODAlO1xuICB9XG5cbn1cblxuLy8gZm9yIHNtYWxsIGRldmljZXNcbkBtZWRpYSAobWF4LXdpZHRoOiA5NTBweCkge1xuXG4gIC5oYWxmLXBhZ2Uge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG5cbn1cbiJdfQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ButtonType, CommonComponent} from '../../../shared/components';\nimport {BogenligaResponse} from '../../../shared/data-provider';\nimport {NotificationService} from '../../../shared/services/notification';\nimport {UserProfileDataProviderService} from '../../services/user-profile-data-provider.service';\nimport {UserProfileDO} from '../../types/user-profile-do.class';\nimport {USER_PROFILE_CONFIG} from './user-profile.config';\n\n@Component({\n  selector:    'bla-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls:   ['./user-profile.component.scss'],\n  providers:   []\n})\nexport class UserProfileComponent extends CommonComponent implements OnInit {\n\n  public config = USER_PROFILE_CONFIG;\n  public ButtonType = ButtonType;\n  public currentUserProfile: UserProfileDO = new UserProfileDO();\n\n  constructor(private userProfileDataProvider: UserProfileDataProviderService,\n              private router: Router,\n              private route: ActivatedRoute,\n              private notificationService: NotificationService) {\n    super();\n  }\n\n  ngOnInit() {\n    this.loading = true;\n\n    this.notificationService.discardNotification();\n    this.loadCurrentUserProfile();\n  }\n\n  private loadCurrentUserProfile() {\n    this.userProfileDataProvider.findCurrentUserProfile()\n      .then((response: BogenligaResponse<UserProfileDO>) => this.handleSuccess(response))\n      .catch((response: BogenligaResponse<UserProfileDO>) => this.handleFailure(response));\n  }\n\n  private handleSuccess(response: BogenligaResponse<UserProfileDO>) {\n    this.currentUserProfile = response.payload;\n    this.loading = false;\n  }\n\n  private handleFailure(response: BogenligaResponse<UserProfileDO>) {\n    this.loading = false;\n\n  }\n}\n","import {CommonDialogConfig} from '../../../shared/components/dialogs';\n\nexport const USER_PROFILE_CONFIG: CommonDialogConfig = {\n  moduleTranslationKey:    'USER',\n  pageTitleTranslationKey: 'USER.PROFILE.TITLE'\n};\n","module.exports = \"<bla-common-dialog [config]=\\\"config\\\">\\n\\n  <div id=\\\"pwd\\\">\\n    <div id=\\\"userPwd-dialog\\\">\\n\\n      <bla-alert [visible]=\\\"(loginResult === LoginResult.SUCCESS)\\\"\\n                 header=\\\"{{ 'USER.PWD.NOTIFICATION.PWD_SUCCESSFUL.HEADER' | translate }}\\\"\\n                 [alertType]=\\\"AlertType.SUCCESS\\\">\\n        {{ 'USER.PWD.NOTIFICATION.PWD_SUCCESSFUL.TEXT' | translate }}\\n      </bla-alert>\\n\\n      <bla-alert [visible]=\\\"(loginResult === LoginResult.FAILURE)\\\"\\n                 header=\\\"{{ 'USER.PWD.NOTIFICATION.PWD_FAILURE.HEADER' | translate }}\\\"\\n                 [alertType]=\\\"AlertType.DANGER\\\">\\n        {{ 'USER.PWD.NOTIFICATION.PWD_FAILURE.TEXT' | translate }}\\n      </bla-alert>\\n\\n      <bla-alert [visible]=\\\"(loginResult === LoginResult.CONNECTION_PROBLEM)\\\"\\n                 header=\\\"{{ 'USER.PWD.NOTIFICATION.PWD_CONNECTION_PROBLEM.HEADER' | translate }}\\\"\\n                 [alertType]=\\\"AlertType.WARNING\\\">\\n        {{ 'USER.PWD.NOTIFICATION.PWD_CONNECTION_PROBLEM.TEXT' | translate }}\\n      </bla-alert>\\n\\n      <div class=\\\"card mb-4 shadow-sm\\\">\\n        <div class=\\\"card-body userPwd-dialog\\\">\\n\\n          <form id=\\\"userPwdForm\\\"\\n                #userPwdForm=\\\"ngForm\\\">\\n\\n            <!-- Logo -->\\n            <div class=\\\"imgcontainer\\\">\\n              <img src=\\\"../assets/img/logo.png\\\"\\n                   alt=\\\"Logo\\\"\\n                   class=\\\"avatar\\\">\\n\\n            </div>\\n\\n            <!-- Input -->\\n            <div class=\\\"container\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"userPwdFormPassword\\\">{{ 'USER.PWD.FORM.PASSWORD.LABEL' | translate }}</label>\\n                <input type=\\\"password\\\"\\n                       class=\\\"form-control\\\"\\n                       id=\\\"userPwdFormPassword\\\"\\n                       name=\\\"userPwdFormPassword\\\"\\n                       #userPwdFormPassword=\\\"ngModel\\\"\\n                       [(ngModel)]=\\\"changeCredentials.password\\\"\\n                       required\\n                       [class.is-invalid]=\\\"(userPwdFormPassword.invalid && !userPwdFormPassword.untouched)\\\"\\n                       placeholder=\\\"{{ 'USER.PWD.FORM.PASSWORD.PLACEHOLDER' | translate }}\\\">\\n\\n                <div class=\\\"invalid-feedback\\\">\\n                  {{ 'USER.PWD.FORM.PASSWORD.ERROR' | translate }}\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"userPwdFormNewPwd\\\">{{ 'USER.PWD.FORM.NEWPASSWORD.LABEL' | translate }}</label>\\n                <input type=\\\"password\\\"\\n                       class=\\\"form-control\\\"\\n                       required\\n                       minlength=\\\"8\\\"\\n                       pattern=\\\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[a-zA-Z0-9]+$\\\"\\n                       id=\\\"userPwdFormNewPwd\\\"\\n                       name=\\\"userPwdFormNewPwd\\\"\\n                       #userPwdFormNewPwd=\\\"ngModel\\\"\\n                       [(ngModel)]=\\\"changeCredentials.newPassword\\\"\\n                       [class.is-invalid]=\\\"(userPwdFormNewPwd.invalid && !userPwdFormNewPwd.untouched)\\\"\\n                       placeholder=\\\"{{ 'USER.PWD.FORM.NEWPASSWORD.PLACEHOLDER' | translate }}\\\">\\n\\n                <div class=\\\"invalid-feedback\\\">\\n                  {{ 'USER.PWD.FORM.NEWPASSWORD.ERROR' | translate }}\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"userPwdFormVerifyPwd\\\">{{ 'USER.PWD.FORM.VERIFYPASSWORD.LABEL' | translate }}</label>\\n                <input type=\\\"password\\\"\\n                       class=\\\"form-control\\\"\\n                       id=\\\"userPwdFormVerifyPwd\\\"\\n                       name=\\\"userPwdFormVerifyPwd\\\"\\n                       #userPwdFormVerifyPwd=\\\"ngModel\\\"\\n                       [(ngModel)]=\\\"changeCredentials.verifyPassword\\\"\\n                       required\\n                       minlength=\\\"8\\\"\\n                       [class.is-invalid]=\\\"userPwdFormVerifyPwd.value != userPwdFormNewPwd.value\\\"\\n                       placeholder=\\\"{{ 'USER.PWD.FORM.VERIFYPASSWORD.PLACEHOLDER' | translate }}\\\">\\n\\n                <div class=\\\"invalid-feedback\\\">\\n                  {{ 'USER.PWD.FORM.VERIFYPASSWORD.ERROR' | translate }}\\n                </div>\\n              </div>\\n\\n              <bla-button\\n                [id]=\\\"'userPwdUpdateButton'\\\"\\n                [disabled]=\\\"!userPwdForm.valid\\\"\\n                (onClick)=\\\"onUpdate($event)\\\">{{ 'USER.PWD.FORM.UPDATE' | translate }}\\n              </bla-button>\\n\\n            </div>\\n          </form>\\n\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n\\n\\n</bla-common-dialog>\\n\\n\\n\\n\\n\"","module.exports = \"/* Farbkonzept Website */\\n#pwd {\\n  display: flex;\\n  justify-content: center; }\\n#userPwd-dialog {\\n  width: 500px;\\n  max-width: 500px; }\\n/* Center the avatar image inside this container */\\n.imgcontainer {\\n  text-align: center;\\n  margin: 24px 0 12px 0; }\\n/* Avatar image */\\nimg.avatar {\\n  width: 40%;\\n  border-radius: 50%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3RyYXZpcy9idWlsZC9leHhjZWxsZW50L3N3dDItYnNhLWZyb250ZW5kL2JvZ2VubGlnYS9zcmMvYXBwL21vZHVsZXMvdXNlci9jb21wb25lbnRzL3VzZXItcHdkL3VzZXItcHdkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHdCQUFBO0FBU0E7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCLEVBQUE7QUFHekI7RUFDRSxZQUFZO0VBQ1osZ0JBQWdCLEVBQUE7QUFHbEIsa0RBQUE7QUFDQTtFQUNFLGtCQUFrQjtFQUNsQixxQkFBcUIsRUFBQTtBQUd2QixpQkFBQTtBQUNBO0VBQ0UsVUFBVTtFQUNWLGtCQUFrQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy91c2VyL2NvbXBvbmVudHMvdXNlci1wd2QvdXNlci1wd2QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBGYXJia29uemVwdCBXZWJzaXRlICovXG4kcHJpbWFyeTogIzAyYmRkNTsgLy8gTGlua3MsIE5hdmJhclxuJHByaW1hcnktbGlnaHQ6ICNiNGZmZmY7IC8vIFNpZGViYXItQmFja2dyb3VuZFxuJHByaW1hcnktZGFyazogIzAwN2M5MTsgLy8gU2lkZWJhci1Gb250XG4kc2Vjb25kYXJ5OiAjZmZjMTA3OyAvLyBob3ZlciBUYWJsZXNcbiRzZWNvbmRhcnktbGlnaHQ6ICNmZmYzNTA7XG4kc2Vjb25kYXJ5LWRhcms6ICNmZjgzM2E7IC8vIGhvdmVyIExpbmtzLCBMb2dvXG5cbi8vIExvZ2luIFN0bHllXG4jcHdkIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbiN1c2VyUHdkLWRpYWxvZyB7XG4gIHdpZHRoOiA1MDBweDtcbiAgbWF4LXdpZHRoOiA1MDBweDtcbn1cblxuLyogQ2VudGVyIHRoZSBhdmF0YXIgaW1hZ2UgaW5zaWRlIHRoaXMgY29udGFpbmVyICovXG4uaW1nY29udGFpbmVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBtYXJnaW46IDI0cHggMCAxMnB4IDA7XG59XG5cbi8qIEF2YXRhciBpbWFnZSAqL1xuaW1nLmF2YXRhciB7XG4gIHdpZHRoOiA0MCU7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbn1cbiJdfQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {AlertType} from '../../../shared/components/alerts';\nimport {UserPwdDataProviderService} from '../../services/user-pwd-data-provider.service';\nimport {ChangeCredentialsDO} from '../../types/changecredentials-do.class';\nimport {LoginResult} from '../../types/login-result.enum';\nimport {USER_PWD_CONFIG} from './user-pwd.config';\n\n@Component({\n  selector:    'bla-user-pwd',\n  templateUrl: './user-pwd.component.html',\n  styleUrls:   ['./user-pwd.component.scss']\n})\nexport class UserPwdComponent implements OnInit {\n\n  public config = USER_PWD_CONFIG;\n  public changeCredentials: ChangeCredentialsDO = new ChangeCredentialsDO();\n  public loginResult: LoginResult = LoginResult.PENDING;\n  public LoginResult = LoginResult;\n  public AlertType = AlertType;\n\n\n//  public loading = false;\n\n  constructor(private userPwdDataProvider: UserPwdDataProviderService) {\n\n  }\n\n\n  ngOnInit() {\n  }\n\n\n  public onUpdate(ignore: any): void {\n//    this.loading = true;\n\n    // persist\n\n    this.userPwdDataProvider.update(this.changeCredentials)\n      .then(\n        () => this.handleSuccessUpdate(),\n        (loginResult: LoginResult) => this.showFailedUpdate(loginResult)\n      );\n  }\n\n  private showFailedUpdate(loginResult: LoginResult) {\n//    this.loading = false;\n    this.loginResult = loginResult;\n  }\n\n  private handleSuccessUpdate() {\n//    this.loading = false;\n    this.loginResult = LoginResult.SUCCESS;\n  }\n\n}\n\n\n","import {CommonDialogConfig} from '../../../shared/components/dialogs';\n\nexport const USER_PWD_CONFIG: CommonDialogConfig = {\n  moduleTranslationKey:    'USER',\n  pageTitleTranslationKey: 'USER.PWD.TITLE'\n};\n","import {Injectable} from '@angular/core';\nimport {CanActivate} from '@angular/router';\nimport {CurrentUserService} from '../../shared/services/current-user';\n\n@Injectable()\nexport class UserGuard implements CanActivate {\n  constructor(private currentUserService: CurrentUserService) {\n  }\n\n  canActivate() {\n    return true;\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {Store} from '@ngrx/store';\nimport {DataProviderService, RestClient, UriBuilder} from '../../shared/data-provider';\nimport {AppState} from '../../shared/redux-store';\nimport {LOGOUT} from '../../shared/redux-store/feature/user';\nimport {CurrentUserService, UserSignInDTO} from '../../shared/services/current-user';\nimport {CredentialsDO} from '../types/credentials-do.class';\nimport {LoginResult} from '../types/login-result.enum';\nimport {CredentialsDTO} from '../types/model/credentials-dto.class';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginDataProviderService extends DataProviderService {\n\n  /*\n   * define common REST service url for all requests in this data provider\n   */\n  serviceSubUrl = 'v1/user/signin';\n\n  /**\n   * Constructor with dependency injection\n   *\n   * @param restClient service for all REST requests\n   * @param currentUserService to handle all actions with the current user\n   * @param store to access the application state managed by the redux store\n   */\n  constructor(private restClient: RestClient,\n              private currentUserService: CurrentUserService,\n              private store: Store<AppState>) {\n    super();\n  }\n\n\n  /**\n   * I send a sign in request to the backend.\n   *\n   * On a successful sign in, the user data will be stored with the {@code CurrentUserService}.\n   *\n   * @param credentialsDO with the sign in payload\n   * @return Promise with\n   * resolve(), if the request was successful\n   * reject(), if an error occurred\n   */\n  public signIn(credentialsDO: CredentialsDO): Promise<LoginResult> {\n\n    // check remember me flag\n    if (credentialsDO.rememberMe) {\n      this.currentUserService.rememberUsername(credentialsDO.username);\n    } else {\n      this.currentUserService.forgetUsername();\n    }\n\n    // return promise\n    // sign in success -> resolve promise\n    // sign in failure -> reject promise with result\n    return new Promise((resolve, reject) => {\n      const credentialsDTO = new CredentialsDTO(credentialsDO.username, credentialsDO.password);\n      this.sendSignInRequest(credentialsDTO, resolve, reject);\n    });\n  }\n\n  public getEmailAddress(): string {\n    return this.currentUserService.getRememberedUsername();\n  }\n\n  /**\n   * I send the request and handle the response\n   */\n  private sendSignInRequest(credentialsDTO: CredentialsDTO, resolve, reject) {\n\n    this.restClient.POST<UserSignInDTO>(new UriBuilder().fromPath(this.getUrl()).build(), credentialsDTO)\n        .then((data: UserSignInDTO) => {\n          // store user details and jwt token in local storage to keep user logged in between page refreshes\n          this.currentUserService.persistCurrentUser(data);\n          resolve(LoginResult.SUCCESS);\n\n        }, (error: HttpErrorResponse) => {\n\n          this.store.dispatch({type: LOGOUT, user: null});\n          this.currentUserService.logout();\n\n          if (error.status === 0) {\n            reject(LoginResult.CONNECTION_PROBLEM);\n          } else {\n            reject(LoginResult.FAILURE);\n          }\n        });\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {\n  BogenligaResponse,\n  DataProviderService,\n  RequestResult,\n  RestClient,\n  UriBuilder,\n  VersionedDataTransferObject\n} from '../../shared/data-provider';\nimport {ChangeCredentialsDO} from '../types/changecredentials-do.class';\nimport {LoginResult} from '../types/login-result.enum';\nimport {ChangeCredentialsDTO} from '../types/model/changecredentials-dto.class';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserPwdDataProviderService extends DataProviderService {\n\n  serviceSubUrl = 'v1/user';\n\n  constructor(private restClient: RestClient) {\n    super();\n  }\n\n  public update(changeCredentialsDO: ChangeCredentialsDO): Promise<LoginResult> {\n\n    return new Promise((resolve, reject) => {\n      const changeCredentialsDTO = new ChangeCredentialsDTO(changeCredentialsDO.password, changeCredentialsDO.newPassword);\n      this.sendupdaterequest(changeCredentialsDTO, resolve, reject);\n    });\n  }\n\n\n  public sendupdaterequest(changeCredentialsDTO: ChangeCredentialsDTO, resolve, reject) {\n    this.restClient.PUT<VersionedDataTransferObject>(new UriBuilder().fromPath(this.getUrl()).build(), changeCredentialsDTO)\n      .then((data: VersionedDataTransferObject) => {\n        resolve(RequestResult.SUCCESS);\n\n      }, (error: HttpErrorResponse) => {\n\n        if (error.status === 0) {\n          reject({result: RequestResult.CONNECTION_PROBLEM});\n        } else {\n          reject({result: RequestResult.FAILURE});\n        }\n      });\n  }\n}\n","import {DataObject} from '../../shared/data-provider';\n\nexport class ChangeCredentialsDO implements DataObject {\n  password: string;\n  newPassword: string;\n  verifyPassword: string;\n\n  constructor(password?: string, newPassword?: string) {\n    this.password = !!password ? password : '';\n    this.newPassword = !!newPassword ? newPassword : '';\n    this.verifyPassword = !!newPassword ? newPassword : '';\n  }\n}\n","export enum LoginResult {\n  PENDING,\n  SUCCESS,\n  FAILURE,\n  CONNECTION_PROBLEM\n}\n","import {DataTransferObject} from '../../../shared/data-provider';\n\nexport class ChangeCredentialsDTO implements DataTransferObject {\n  password: string;\n  newPassword: string;\n\n  constructor(password: string, newPassword: string) {\n    this.password = password;\n    this.newPassword = newPassword;\n  }\n\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {RouterModule} from '@angular/router';\nimport {SharedModule} from '../shared';\nimport {LoginComponent} from './components/login/login.component';\nimport {UserProfileComponent} from './components/user-profile/user-profile.component';\nimport {UserPwdComponent} from './components/user-pwd/user-pwd.component';\nimport {UserGuard} from './guards/user.guard';\nimport {USER_ROUTES} from './user.routing';\n\n@NgModule({\n  imports:      [\n    CommonModule,\n    RouterModule.forChild(USER_ROUTES),\n    SharedModule.forChild(),\n    FormsModule\n  ],\n  declarations: [LoginComponent, UserProfileComponent, UserPwdComponent],\n  providers:    [UserGuard]\n})\nexport class UserModule {\n}\n","import {Routes} from '@angular/router';\nimport {LoginComponent} from './components/login/login.component';\nimport {UserProfileComponent} from './components/user-profile/user-profile.component';\nimport {UserPwdComponent} from './components/user-pwd/user-pwd.component';\nimport {UserGuard} from './guards/user.guard';\n\n\nexport const USER_ROUTES: Routes = [\n  {path: 'profile', pathMatch: 'full', component: UserProfileComponent, canActivate: [UserGuard]},\n  {path: 'pwd', pathMatch: 'full', component: UserPwdComponent, canActivate: [UserGuard]},\n  {path: 'login', component: LoginComponent, canActivate: [UserGuard]},\n];\n"],"sourceRoot":""}