{"version":3,"sources":["webpack:///./src/app/modules/user/mapper/user-profile-mapper.ts","webpack:///./src/app/modules/user/services/user-profile-data-provider.service.ts","webpack:///./src/app/modules/user/types/credentials-do.class.ts","webpack:///./src/app/modules/user/types/model/credentials-dto.class.ts","webpack:///./src/app/modules/user/types/model/user-profile-dto.class.ts","webpack:///./src/app/modules/user/types/user-profile-do.class.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import {VersionedDataTransferObject} from '@shared/data-provider';\nimport {UserProfileDTO} from '../types/model/user-profile-dto.class';\n\nexport function fromPayload(payload: VersionedDataTransferObject): UserProfileDTO {\n  return UserProfileDTO.copyFrom(payload);\n}\n\nexport function fromPayloadArray(payload: VersionedDataTransferObject[]): UserProfileDTO[] {\n  const list: UserProfileDTO[] = [];\n  payload.forEach((single) => list.push(fromPayload(single)));\n  return list;\n}\n","import {Injectable} from '@angular/core';\n\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {\n  BogenligaResponse,\n  DataProviderService,\n  RequestResult,\n  RestClient,\n  UriBuilder,\n  VersionedDataTransferObject\n} from '../../shared/data-provider';\nimport {CurrentUserService} from '../../shared/services/current-user';\nimport {fromPayload, fromPayloadArray} from '../mapper/user-profile-mapper';\nimport {UserProfileDO} from '../types/user-profile-do.class';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserProfileDataProviderService extends DataProviderService {\n\n  serviceSubUrl = 'v1/user';\n\n  constructor(private restClient: RestClient, private currentUserService: CurrentUserService) {\n    super();\n  }\n\n\n  public findAll(): Promise<BogenligaResponse<UserProfileDO[]>> {\n    // return promise\n    // sign in success -> resolve promise\n    // sign in failure -> reject promise with result\n    return new Promise((resolve, reject) => {\n      this.restClient.GET<Array<VersionedDataTransferObject>>(this.getUrl())\n        .then((data: VersionedDataTransferObject[]) => {\n\n          resolve({result: RequestResult.SUCCESS, payload: fromPayloadArray(data)});\n\n        }, (error: HttpErrorResponse) => {\n\n          if (error.status === 0) {\n            reject({result: RequestResult.CONNECTION_PROBLEM});\n          } else {\n            reject({result: RequestResult.FAILURE});\n          }\n        });\n    });\n  }\n\n\n  public findById(id: string | number): Promise<BogenligaResponse<UserProfileDO>> {\n    // return promise\n    // sign in success -> resolve promise\n    // sign in failure -> reject promise with result\n    return new Promise((resolve, reject) => {\n      this.restClient.GET<VersionedDataTransferObject>(new UriBuilder().fromPath(this.getUrl()).path(id).build())\n        .then((data: VersionedDataTransferObject) => {\n\n          resolve({result: RequestResult.SUCCESS, payload: fromPayload(data)});\n\n        }, (error: HttpErrorResponse) => {\n\n          if (error.status === 0) {\n            reject({result: RequestResult.CONNECTION_PROBLEM});\n          } else {\n            reject({result: RequestResult.FAILURE});\n          }\n        });\n    });\n  }\n\n  public findCurrentUserProfile(): Promise<BogenligaResponse<UserProfileDO>> {\n    // return promise\n    // sign in success -> resolve promise\n    // sign in failure -> reject promise with result\n    const id = this.currentUserService.getUserId();\n    return new Promise((resolve, reject) => {\n      this.restClient.GET<VersionedDataTransferObject>(new UriBuilder().fromPath(this.getUrl()).path(id).build())\n        .then((data: VersionedDataTransferObject) => {\n\n          resolve({result: RequestResult.SUCCESS, payload: fromPayload(data)});\n\n        }, (error: HttpErrorResponse) => {\n\n          if (error.status === 0) {\n            reject({result: RequestResult.CONNECTION_PROBLEM});\n          } else {\n            reject({result: RequestResult.FAILURE});\n          }\n        });\n    });\n  }\n}\n","import {DataObject} from '../../shared/data-provider';\n\nexport class CredentialsDO implements DataObject {\n  username: string;\n  password: string;\n  rememberMe = false;\n\n  constructor(username?: string, password?: string) {\n    this.username = !!username ? username : '';\n    this.password = !!password ? password : '';\n  }\n}\n","import {DataTransferObject} from '../../../shared/data-provider';\n\nexport class CredentialsDTO implements DataTransferObject {\n  username: string;\n  password: string;\n\n  constructor(username: string, password: string) {\n    this.username = username;\n    this.password = password;\n  }\n\n}\n","import {DataTransferObject} from '../../../shared/data-provider';\n\nexport class UserProfileDTO implements DataTransferObject {\n  id: number;\n  vorname: string;\n  nachname: string;\n  email: string;\n  geburtsdatum: string;\n  nationalitaet: string;\n  mitgliedsnummer: string;\n  vereinsId: number;\n  userId: number;\n  version: number;\n\n  static copyFrom(optional: {\n    id?: number,\n    vorname?: string,\n    nachname?: string,\n    email?: string;\n    geburtsdatum?: string,\n    nationalitaet?: string,\n    mitgliedsnummer?: string,\n    vereinsId?: number,\n    userId?: number,\n    version?: number\n  } = {}): UserProfileDTO {\n    const copy = new UserProfileDTO();\n\n    // show '0' value\n    if (optional.id >= 0) {\n      copy.id = optional.id;\n    } else {\n      copy.id = null;\n    }\n\n    copy.vorname = optional.vorname || '';\n    copy.nachname = optional.nachname || '';\n    copy.email = optional.email || '';\n    copy.geburtsdatum = optional.geburtsdatum || '';\n    copy.nationalitaet = optional.nationalitaet || '';\n    copy.mitgliedsnummer = optional.mitgliedsnummer || '';\n    copy.vereinsId = optional.vereinsId || null;\n    copy.userId = optional.userId || null;\n    copy.version = optional.version || null;\n\n    return copy;\n  }\n}\n","import {VersionedDataObject} from '../../shared/data-provider/models/versioned-data-object.interface';\n\nexport class UserProfileDO implements VersionedDataObject {\n  id: number;\n  version: number;\n\n  vorname: string;\n  nachname: string;\n  email: string;\n  geburtsdatum: string;\n  nationalitaet: string;\n  mitgliedsnummer: string;\n  vereinsId: number;\n  userId: number;\n}\n"],"sourceRoot":""}