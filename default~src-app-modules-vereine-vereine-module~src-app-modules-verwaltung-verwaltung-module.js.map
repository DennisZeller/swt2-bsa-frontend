{"version":3,"sources":["webpack:///./src/app/modules/verwaltung/mapper/dsb-mannschaft-mapper.ts","webpack:///./src/app/modules/verwaltung/mapper/region-mapper.ts","webpack:///./src/app/modules/verwaltung/services/dsb-mannschaft-data-provider.service.ts","webpack:///./src/app/modules/verwaltung/services/region-data-provider.service.ts","webpack:///./src/app/modules/verwaltung/types/datatransfer/dsb-mannschaft-dto.class.ts","webpack:///./src/app/modules/verwaltung/types/datatransfer/region-dto.class.ts","webpack:///./src/app/modules/verwaltung/types/verein-do.class.ts"],"names":[],"mappings":"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","file":"default~src-app-modules-vereine-vereine-module~src-app-modules-verwaltung-verwaltung-module.js","sourcesContent":["import {VersionedDataTransferObject} from '../../shared/data-provider';\nimport {DsbMannschaftDTO} from '../types/datatransfer/dsb-mannschaft-dto.class';\n\n// export function toDO(mannschaftDTO: MannschaftDTO): MannschaftDO {\n//\n// }\n//\n// export function toDTO(mannschaftDO: MannschaftDO): MannschaftDTO {\n//\n// }\n\nexport function fromPayload(payload: VersionedDataTransferObject): DsbMannschaftDTO {\n  return DsbMannschaftDTO.copyFrom(payload);\n}\n\nexport function fromPayloadArray(payload: VersionedDataTransferObject[]): DsbMannschaftDTO[] {\n  const list: DsbMannschaftDTO[] = [];\n  payload.forEach((single) => list.push(fromPayload(single)));\n  return list;\n}\n","import {VersionedDataTransferObject} from '../../shared/data-provider';\nimport {RegionDTO} from '../types/datatransfer/region-dto.class';\n\nexport function fromPayload(payload: VersionedDataTransferObject): RegionDTO {\n  return RegionDTO.copyFrom(payload);\n}\n\nexport function fromPayloadArray(payload: VersionedDataTransferObject[]): RegionDTO[] {\n  const list: RegionDTO[] = [];\n  payload.forEach((single) => list.push(fromPayload(single)));\n  return list;\n}\n","import {Injectable} from '@angular/core';\n\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {\n  BogenligaResponse,\n  DataProviderService,\n  RequestResult,\n  RestClient,\n  UriBuilder,\n  VersionedDataTransferObject\n} from '../../shared/data-provider';\nimport {CurrentUserService} from '../../shared/services/current-user';\nimport {fromPayload, fromPayloadArray} from '../mapper/dsb-mannschaft-mapper';\nimport {DsbMannschaftDO} from '../types/dsb-mannschaft-do.class';\nimport {VereinDO} from '../types/verein-do.class';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DsbMannschaftDataProviderService extends DataProviderService {\n\n  serviceSubUrl = 'v1/dsbmannschaft';\n\n  constructor(private restClient: RestClient, private currentUserService: CurrentUserService) {\n    super();\n  }\n\n  public create(payload: DsbMannschaftDO, payload2: VereinDO): Promise<BogenligaResponse<DsbMannschaftDO>> {\n    // return promise\n    // sign in success -> resolve promise\n    // sign in failure -> reject promise with result\n    return new Promise((resolve, reject) => {\n      this.restClient.POST<VersionedDataTransferObject>(new UriBuilder().fromPath(this.getUrl()).build(), payload)\n          .then((data: VersionedDataTransferObject) => {\n            resolve({result: RequestResult.SUCCESS, payload: fromPayload(data)});\n\n          }, (error: HttpErrorResponse) => {\n\n            if (error.status === 0) {\n              reject({result: RequestResult.CONNECTION_PROBLEM});\n            } else {\n              reject({result: RequestResult.FAILURE});\n            }\n          });\n      this.restClient.POST<VersionedDataTransferObject>(new UriBuilder().fromPath(this.getUrl()).build(), payload2)\n        .then((data: VersionedDataTransferObject) => {\n          resolve({result: RequestResult.SUCCESS, payload: fromPayload(data)});\n\n        }, (error: HttpErrorResponse) => {\n\n          if (error.status === 0) {\n            reject({result: RequestResult.CONNECTION_PROBLEM});\n          } else {\n            reject({result: RequestResult.FAILURE});\n          }\n        });\n    });\n  }\n\n  public deleteById(id: number): Promise<BogenligaResponse<void>> {\n    // return promise\n    // sign in success -> resolve promise\n    // sign in failure -> reject promise with result\n    return new Promise((resolve, reject) => {\n      this.restClient.DELETE<void>(new UriBuilder().fromPath(this.getUrl()).path(id).build())\n          .then((noData) => {\n            resolve({result: RequestResult.SUCCESS});\n\n          }, (error: HttpErrorResponse) => {\n\n            if (error.status === 0) {\n              reject({result: RequestResult.CONNECTION_PROBLEM});\n            } else {\n              reject({result: RequestResult.FAILURE});\n            }\n          });\n    });\n  }\n\n\n  public findAll(): Promise<BogenligaResponse<DsbMannschaftDO[]>> {\n    // return promise\n    // sign in success -> resolve promise\n    // sign in failure -> reject promise with result\n    return new Promise((resolve, reject) => {\n      this.restClient.GET<Array<VersionedDataTransferObject>>(this.getUrl())\n          .then((data: VersionedDataTransferObject[]) => {\n\n            resolve({result: RequestResult.SUCCESS, payload: fromPayloadArray(data)});\n\n          }, (error: HttpErrorResponse) => {\n\n            if (error.status === 0) {\n              reject({result: RequestResult.CONNECTION_PROBLEM});\n            } else {\n              reject({result: RequestResult.FAILURE});\n            }\n          });\n    });\n  }\n\n\n  public findById(id: string | number): Promise<BogenligaResponse<DsbMannschaftDO>> {\n    // return promise\n    // sign in success -> resolve promise\n    // sign in failure -> reject promise with result\n    return new Promise((resolve, reject) => {\n      this.restClient.GET<VersionedDataTransferObject>(new UriBuilder().fromPath(this.getUrl()).path(id).build())\n          .then((data: VersionedDataTransferObject) => {\n\n            resolve({result: RequestResult.SUCCESS, payload: fromPayload(data)});\n\n          }, (error: HttpErrorResponse) => {\n\n            if (error.status === 0) {\n              reject({result: RequestResult.CONNECTION_PROBLEM});\n            } else {\n              reject({result: RequestResult.FAILURE});\n            }\n          });\n    });\n  }\n\n  public update(payload: VersionedDataTransferObject): Promise<BogenligaResponse<DsbMannschaftDO>> {\n    // return promise\n    // sign in success -> resolve promise\n    // sign in failure -> reject promise with result\n    return new Promise((resolve, reject) => {\n      this.restClient.PUT<VersionedDataTransferObject>(new UriBuilder().fromPath(this.getUrl()).build(), payload)\n          .then((data: VersionedDataTransferObject) => {\n            resolve({result: RequestResult.SUCCESS, payload: fromPayload(data)});\n\n          }, (error: HttpErrorResponse) => {\n\n            if (error.status === 0) {\n              reject({result: RequestResult.CONNECTION_PROBLEM});\n            } else {\n              reject({result: RequestResult.FAILURE});\n            }\n          });\n    });\n  }\n}\n","import {HttpErrorResponse} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {\n  BogenligaResponse,\n  DataProviderService,\n  RequestResult,\n  RestClient,\n  UriBuilder,\n  VersionedDataTransferObject\n} from '../../shared/data-provider';\nimport {CurrentUserService} from '../../shared/services/current-user';\nimport {fromPayloadArray} from '../mapper/region-mapper';\nimport {RegionDO} from '../types/region-do.class';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegionDataProviderService extends DataProviderService {\n\n  serviceSubUrl = 'v1/regionen';\n\n\n  constructor(private restClient: RestClient, private currentUserService: CurrentUserService) {\n    super();\n  }\n\n  public findAll(): Promise<BogenligaResponse<RegionDO[]>> {\n    // return promise\n    // sign in success -> resolve promise\n    // sign in failure -> reject promise with result\n    return new Promise((resolve, reject) => {\n      this.restClient.GET<Array<VersionedDataTransferObject>>(this.getUrl())\n          .then((data: VersionedDataTransferObject[]) => {\n            resolve({result: RequestResult.SUCCESS, payload: fromPayloadArray(data)});\n          }, (error: HttpErrorResponse) => {\n\n            if (error.status === 0) {\n              reject({result: RequestResult.CONNECTION_PROBLEM});\n            } else {\n              reject({result: RequestResult.FAILURE});\n            }\n          });\n    });\n  }\n\n  public findAllByType(type: string): Promise<BogenligaResponse<RegionDO[]>> {\n    // return promise\n    // sign in success -> resolve promise\n    // sign in failure -> reject promise with result\n    return new Promise((resolve, reject) => {\n      this.restClient.GET<Array<VersionedDataTransferObject>>(new UriBuilder().fromPath(this.getUrl()).path(type).build())\n          .then((data: VersionedDataTransferObject[]) => {\n            resolve({result: RequestResult.SUCCESS, payload: fromPayloadArray(data)});\n          }, (error: HttpErrorResponse) => {\n\n            if (error.status === 0) {\n              reject({result: RequestResult.CONNECTION_PROBLEM});\n            } else {\n              reject({result: RequestResult.FAILURE});\n            }\n          });\n    });\n  }\n}\n","import {DataTransferObject} from '@shared/data-provider';\n\nexport class DsbMannschaftDTO implements DataTransferObject {\n  id: number;\n  nummer: string;\n  vereinId: number;\n  benutzerId: number;\n  version: number;\n  veranstaltungID: number;\n\n  static copyFrom(optional: {\n    id?: number,\n    nummer?: string,\n    vereinId?: number,\n    benutzerId?: number,\n    version?: number,\n    veranstaltungID?: number;\n  } = {}): DsbMannschaftDTO {\n    const copy = new DsbMannschaftDTO();\n    // show '0' value\n    if (optional.id >= 0) {\n      copy.id = optional.id;\n    } else {\n      copy.id = null;\n    }\n\n    if (optional.benutzerId >= 0) {\n      copy.benutzerId = optional.benutzerId;\n    } else {\n      copy.benutzerId = null;\n    }\n\n    if (optional.vereinId >= 0) {\n      copy.vereinId = optional.vereinId;\n    } else {\n      copy.vereinId = null;\n    }\n    if (optional.veranstaltungID >= 0) {\n      copy.veranstaltungID = optional.veranstaltungID;\n    } else {\n      copy.veranstaltungID = null;\n    }\n    copy.version = optional.version || null;\n    copy.nummer = optional.nummer || '';\n\n    return copy;\n  }\n}\n","import {DataTransferObject} from '@shared/data-provider';\n\nexport class RegionDTO implements DataTransferObject {\n  id: number;\n  version: number;\n\n  regionName: string;\n  regionKuerzel: string;\n  regionTyp: string;\n  regionUebergeordnet: number;\n\n  static copyFrom(optional: {\n    id?: number,\n    name?: string,\n    kuerzel?: string,\n    typ?: string,\n    uebergeordnet?: number,\n    version?: number\n  } = {}): RegionDTO {\n    const copy = new RegionDTO();\n    if (optional.id >= 0) {\n      copy.id = optional.id;\n    } else {\n      copy.id = null;\n    }\n\n    if (optional.uebergeordnet >= 0) {\n      copy.regionUebergeordnet = optional.uebergeordnet;\n    } else {\n      copy.regionUebergeordnet = null;\n    }\n\n    copy.regionName = optional.name || '';\n    copy.regionKuerzel = optional.kuerzel || '';\n    copy.regionTyp = optional.typ || '';\n\n    copy.version = optional.version || null;\n\n    return copy;\n  }\n}\n","import {VersionedDataObject} from '../../shared/data-provider/models/versioned-data-object.interface';\n\nexport class VereinDO implements VersionedDataObject {\n  id: number;\n  version: number;\n\n  name: string;\n  identifier: string;\n\n  regionId: number;\n  regionName: string;\n}\n"],"sourceRoot":""}